<!doctype html>
<html>

<head>
	<title>Line Chart</title>
	<script src="https://www.chartjs.org/dist/2.8.0/Chart.min.js"></script>
	<script src="https://www.chartjs.org/samples/latest/utils.js"></script>
	<script src=""https://www.chartjs.org/dist/2.9.3/Chart.min.js"></script>
	<style>
	
	canvas{
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;}
		
.inner 
{
    display: inline-block;
	width: 40%;
 
}
#container
{
   
    margin: 0px auto;
    width: 90%;
}
		
		
	
	</style>
</head>
<div id="container">
   

	<div style="width:40%;" class="inner">
		<canvas id="canvas"></canvas>
	</div>

	
	<script>

		var config1 = {
			type: 'line',
			data: {
				labels: ['Bacon', 'Test', 'March', 'April', 'May', 'June', 'July', 'Test'],
				datasets: [{
					label: 'Sales',
					backgroundColor: window.chartColors.red,
					borderColor: window.chartColors.red,
					data: [
						5,
                        1,
                        3,
                        1,
                        2,
                        4,
                        5,
                        8
					],
					fill: false,
				}]
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: 'Chart.js Line Chart'
				},
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Month'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Value'
						}
					}]
				}
			}
		};

   
		
	</script>

<div class="inner">

	<div id="canvas-holder" >
		<canvas id="chart-area"></canvas>
	</div>
	<button id="randomizeData">Randomize Data</button>
	<button id="addDataset">Add Dataset</button>
	<button id="removeDataset">Remove Dataset</button>
	<script>
		var randomScalingFactor = function() {
			return Math.round(Math.random() * 100);
		};

		var config2= {
			type: 'pie',
			data: {
				datasets: [{
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
					],
					backgroundColor: [
						window.chartColors.red,
						window.chartColors.orange,
						window.chartColors.yellow,
						window.chartColors.green,
						window.chartColors.blue,
					],
					label: 'Dataset 1'
				}],
				labels: [
					'Red',
					'Orange',
					'Yellow',
					'Green',
					'Blue'
				]
			},
			options: {
				responsive: true
			}
		};

	     // making the chart
		window.onload = function() {
			var ctx1 = document.getElementById('canvas').getContext('2d');
			window.myLine = new Chart(ctx1, config1); 
			var ctx2 = document.getElementById('chart-area').getContext('2d');
			window.myPie = new Chart(ctx2, config2);// brings it all together.
		};

		document.getElementById('randomizeData').addEventListener('click', function() {
			config2.data.datasets.forEach(function(dataset) {
				dataset.data = dataset.data.map(function() {
					return randomScalingFactor();
				});
			});

			window.myPie.update();
		});

		var colorNames = Object.keys(window.chartColors);
		document.getElementById('addDataset').addEventListener('click', function() {
			var newDataset = {
				backgroundColor: [],
				data: [],
				label: 'New dataset ' + config2.data.datasets.length,
			};

			for (var index = 0; index < config2.data.labels.length; ++index) {
				newDataset.data.push(randomScalingFactor());

				var colorName = colorNames[index % colorNames.length];
				var newColor = window.chartColors[colorName];
				newDataset.backgroundColor.push(newColor);
			}

			config2.data.datasets.push(newDataset);
			window.myPie.update();
		});

		document.getElementById('removeDataset').addEventListener('click', function() {
			config2.data.datasets.splice(0, 1);
			window.myPie.update();
		});
	</script>
	
</div>
</div>











</html>